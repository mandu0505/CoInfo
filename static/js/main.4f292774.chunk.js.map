{"version":3,"sources":["routes/api.ts","routes/Coins.tsx","routes/Chart.tsx","routes/Coin.tsx","Router.tsx","App.tsx","index.tsx","theme.ts"],"names":["BASE_URL","fetchCoins","a","fetch","response","json","coinId","endDate","Math","floor","Date","now","startDate","Container","styled","div","Header","CoinsList","Coin","props","theme","bgColor","accentColor","Title","h1","textColor","Loader","span","Img","img","Coins","useQuery","isLoading","data","Helmet","slice","map","coin","to","id","state","name","rank","src","symbol","toLowerCase","Chart","fetchCoinHistory","refetchInterval","type","series","price","close","options","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels","categories","time_close","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","BtnContainer","Overview","OverviewItem","Description","p","Tabs","BackBtn","Tab","isActive","useParams","chartMatch","useMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","quotes","USD","description","total_supply","max_supply","path","element","Routers","GlobalStyle","createGlobalStyle","App","Router","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.4f292774.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\r\n\r\nexport async function fetchCoins() {\r\n  const response = await fetch(`${BASE_URL}/coins`);\r\n  return await response.json();\r\n}\r\n\r\nexport async function fetchCoinInfo(coinId: string) {\r\n  const response = await fetch(`${BASE_URL}/coins/${coinId}`);\r\n  return await response.json();\r\n}\r\n\r\nexport async function fetchCoinTickers(coinId: string) {\r\n  const response = await fetch(`${BASE_URL}/tickers/${coinId}`);\r\n  return await response.json();\r\n}\r\n\r\nexport async function fetchCoinHistory(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n  const response = await fetch(\r\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  );\r\n  return await response.json();\r\n}\r\n","import { useQuery } from \"react-query\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"./api\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\nconst Header = styled.div`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst CoinsList = styled.div``;\r\nconst Coin = styled.div`\r\n  background-color: white;\r\n  color: ${(props) => props.theme.bgColor};\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 20px;\r\n    transition: color 0.2s ease-in;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.textColor};\r\n`;\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\nconst Img = styled.img`\r\n  width: 30px;\r\n  height: 30px;\r\n  margin-right: 10px;\r\n`;\r\n\r\ninterface Icon {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nfunction Coins() {\r\n  const { isLoading, data } = useQuery<Icon[]>(\"allcoins\", fetchCoins);\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Coins</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>Coins</Title>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <CoinsList>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={`/${coin.id}`}\r\n                state={{ name: coin.name, rank: coin.rank }}\r\n              >\r\n                <Img\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinsList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\nexport default Coins;\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"./api\";\r\nimport ApexChart from \"react-apexcharts\";\r\n\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\ninterface ChartProps {\r\n  coinId: string;\r\n}\r\n\r\nfunction Chart({ coinId }: ChartProps) {\r\n  const { isLoading, data } = useQuery<IHistorical[]>(\r\n    [\"ohlcv\", coinId],\r\n    () => fetchCoinHistory(coinId),\r\n    {\r\n      refetchInterval: 10000,\r\n    }\r\n  );\r\n  \r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"line\"\r\n          series={[\r\n            {\r\n              name: \"Price\",\r\n              data: data?.map((price) => price.close),\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: {\r\n              mode: \"dark\",\r\n            },\r\n            chart: {\r\n              height: 300,\r\n              width: 500,\r\n              toolbar: {\r\n                show: false,\r\n              },\r\n              background: \"transparent\",\r\n            },\r\n            grid: { show: false },\r\n            stroke: {\r\n              curve: \"smooth\",\r\n              width: 4,\r\n            },\r\n            yaxis: {\r\n              show: false,\r\n            },\r\n            xaxis: {\r\n              axisBorder: { show: false },\r\n              axisTicks: { show: false },\r\n              labels: { show: false },\r\n              type: \"datetime\",\r\n              categories: data?.map((price) => price.time_close),\r\n            },\r\n            fill: {\r\n              type: \"gradient\",\r\n              gradient: {gradientToColors: [\"red\"], stops: [0, 100]},\r\n            },\r\n            colors: [\"blue\"],\r\n            tooltip: {\r\n              y: {\r\n                formatter: (value) => `$${value.toFixed(3)}`,\r\n              }\r\n            }\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import { useQuery } from \"react-query\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useParams, Routes, Route } from \"react-router\";\r\nimport { Link, useMatch } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"./api\";\r\nimport Chart from \"./Chart\";\r\n\r\nconst Container = styled.div`\r\n  padding: 10px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\nconst Header = styled.div`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\nconst Title = styled.h1`\r\ndisplay: flex;\r\n  font-size: 25px;\r\n  color: ${(props) => props.theme.textColor};\r\n`;\r\nconst BtnContainer = styled.div`\r\n  width: 30%;\r\n`;\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(1, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\nconst BackBtn = styled.div`\r\n  width: 30px;\r\n  height: 30px;\r\n  display: flex;\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  border: 1px solid ${(props) => props.theme.textColor};\r\n  color: ${(props) => props.theme.textColor};\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 20px;\r\n  font-weight: 900;\r\n`;\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n      props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\ninterface RouteParams {\r\n  coinId: string;\r\n}\r\ninterface InfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\ninterface PriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nfunction Coin() {\r\n  const params = useParams() as RouteParams;\r\n  const coinId = params.coinId;\r\n  const chartMatch = useMatch(\"/:coinId/chart\");\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\r\n    [\"info\", coinId],\r\n    () => fetchCoinInfo(coinId),\r\n    {\r\n      refetchInterval: 5000,\r\n    }\r\n  );\r\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\r\n    [\"tickers\", coinId],\r\n    () => fetchCoinTickers(coinId)\r\n  );\r\n  const loading = infoLoading || tickersLoading;\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {infoData?.name ? infoData.name : loading ? \"Loading...\" : infoData?.name}\r\n        </title>\r\n      </Helmet>\r\n      <Header>\r\n        <BtnContainer>\r\n          <BackBtn>\r\n            <Link to=\"/\">&larr;</Link>\r\n          </BackBtn>\r\n        </BtnContainer>\r\n        <Title>\r\n          {infoData?.name ? infoData.name : loading ? \"Loading...\" : infoData?.name}\r\n        </Title>\r\n        <BtnContainer></BtnContainer>\r\n      </Header>\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>${infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n          </Tabs>\r\n          <Routes>\r\n            <Route path=\"chart\" element={<Chart coinId={coinId}/>} />\r\n          </Routes>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\nexport default Coin;\r\n","import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport Coins from \"./routes/Coins\";\r\nimport Coin from \"./routes/Coin\";\r\nfunction Routers() {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Coins />} />\r\n        <Route path=\"/:coinId/*\" element={<Coin />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\nexport default Routers;\r\n","import { createGlobalStyle } from \"styled-components\";\nimport Routers from \"./Router\";\nimport {ReactQueryDevtools} from \"react-query/devtools\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n*[hidden] {\n    display: none;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration: none;\n  color: inherit;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Routers />\n      <ReactQueryDevtools initialIsOpen={true} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {theme} from \"./theme\";\nimport {ThemeProvider} from \"styled-components\";\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n    <ThemeProvider theme={theme}>\n    <App />\n    </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const theme: DefaultTheme = {\r\n  bgColor: \"#2f3640\",\r\n  textColor: \"#f5f6fa\",\r\n  accentColor: \"blanchedalmond\",\r\n};\r\n"],"sourceRoot":""}